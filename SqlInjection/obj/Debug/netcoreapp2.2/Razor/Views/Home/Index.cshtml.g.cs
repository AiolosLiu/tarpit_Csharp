#pragma checksum "/Users/tongbo/Downloads/CShape/tmp/ASP.NET-Demo/SqlInjection/Views/Home/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1399510b60afd00553592d4ab10bddb3f409a4e6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(SqlInjection.Pages.Home.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(SqlInjection.Pages.Home.Views_Home_Index))]
namespace SqlInjection.Pages.Home
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1399510b60afd00553592d4ab10bddb3f409a4e6", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"47241ed6455731e75e02dda2083013d82ade95fa", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<PaginatedList<SqlInjection.Models.Order>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "RecreateDatabase", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn btn-warning"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(48, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 3 "/Users/tongbo/Downloads/CShape/tmp/ASP.NET-Demo/SqlInjection/Views/Home/Index.cshtml"
  
    ViewData["Title"] = "Index";

#line default
#line hidden
            DefineSection("Scripts", async() => {
                BeginContext(105, 3001, true);
                WriteLiteral(@"
    <script>
        function SearchStudentUnsecure() {
            var name = $('#SearchString').val();
            $.getJSON(`http://localhost:5005/SearchStudentUnsecure?name=${name}`
            ).done(function (data) {
                var table = `<table class=""table table-dark"">
                                            <thead> <tr> <th> Last Name </th> <th> First Name </th> </tr> </thead>
                             <tbody>`;
                data.forEach(student => {
                    table += `<tr><td> ${student.lastName}</td> <td>${student.firstName}</td> </tr>`;
                });
                table += `</tbody></table>`;
                $('#unsecureContent').html(table);
            });
        }
        function searchSecure() {
            var name = $('#SecureSearchString').val();
            $.get(`http://localhost:5005/ExecCmdSecure?name=${name}`
            ).done(function (data) {
                data1 = data.split(/\n/).join('</div><br/><div>');
                $('#unsecureContent'");
                WriteLiteral(@").html('<div>'+data+'</div>');
            });
        }
        
        function directory_traversal() {
            var name = $('#DirectoryString').val();
            $.get(`http://localhost:5005/dirTraversal?name=${name}`
            ).done(function (data) {
                $('#unsecureContent').text(data);
            });
        }
        
        function CompilerAbusePattern() {
            var name = $('#CShapeString').val();
            $.get(`http://localhost:5005/CompilerAbusePattern?name=${name}`
            ).done(function (data) {
                $('#unsecureContent').text(data);
            });
        }
        
        function insiderHandler() {
            var name = $('#insiderString').val();
            $.get(`http://localhost:5005/insiderHandler?${name}`
            ).done(function (data) {
                $('#unsecureContent').text(data);
            });
        }

        function AddNewOrderGet() {
            var name = $('#AddNewOrderString').val();
            $.get(`http://local");
                WriteLiteral(@"host:5005/AddNewOrder?reader=${name}`
            ).done(function (data) {
                $('#unsecureContent').text(data);
            });
        }
        
        function AddNewOrderPost() {
            var name = $('#AddNewOrderString').val();
            $.post(`http://localhost:5005/AddNewOrder?reader=${name}`
            ).done(function (data) {
                $('#unsecureContent').text(data);
            });
        }
        
    
/* END EXTERNAL SOURCE */
/* BEGIN EXTERNAL SOURCE */
function name5() {
searchUnsecure()
}
/* END EXTERNAL SOURCE */
/* BEGIN EXTERNAL SOURCE */
function name6() {
searchSecure()
}
/* END EXTERNAL SOURCE */
/* BEGIN EXTERNAL SOURCE */
function name7() {
directory_traversal()
}
/* END EXTERNAL SOURCE */
/* BEGIN EXTERNAL SOURCE */
function name8() {
CompilerAbusePattern()
}
/* END EXTERNAL SOURCE */
/* BEGIN EXTERNAL SOURCE */
function name9() {
insiderHandler()
}
</script>
");
                EndContext();
            }
            );
            BeginContext(3108, 5870, true);
            WriteLiteral(@"<h2>Students</h2>
<br>
<p>To exploit the SQL Injection threat, you can try:
    <ul>
        <li>Use <span class=""badge badge-danger"">abc' OR 1=1 --</span> - In this case this is the easiest way to determine that SQL is unsecure</li>
        <li>Going further, you can discover all tables in SQL by using this query <span class=""badge badge-danger"">abc' UNION SELECT [name], cast(max_column_id_used as varchar(5)) FROM sys.Tables --</span> - Now all tables and how many colums each one has will be shown</li>
        <li>
            In a hyphotetical attack, sensitive data could be stolen. Try this: <span class=""badge badge-danger"">abc' UNION SELECT Username, Password FROM AspnetUsers --</span>
        </li>
        <li>
            Now you can try another commands, like:
            <ul>
                <li><span class=""badge badge-danger"">abc' UNION SELECT COLUMN_NAME, DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'Course' --</span></li>
                <li>Bob drop table :) - <span class=""badge b");
            WriteLiteral(@"adge-danger"">abc' DROP TABLE Student --</span> - After this, click on the button Recreat at the bottom of this page</li>
            </ul>
        </li>
    </ul>
</p>
<hr/>
<div class=""row"">
    <div class=""col col-6"">
        <div class=""card text-white mb-3"">
            <div class=""card-header bg-danger"">Unsecure find Student by Name:</div>
            <div class=""card-body"">
                <div class=""input-group"">
                    <input type=""text"" class=""form-control"" id=""SearchString""/>
                    <button type=""button"" class=""btn btn-primary"" onclick=""SearchStudentUnsecure()"">Search</button>
                </div>
            </div>
        </div>
    </div>
    <div class=""col col-6"">
        <div class=""card text-white mb-3"">
            <div class=""card-header bg-success"">Secure find Student by Name:</div>
            <div class=""card-body"">
                <div class=""input-group"">
                    <input type=""text"" class=""form-control"" id=""SecureSearchString"" />
                ");
            WriteLiteral(@"    <button type=""button"" class=""btn btn-primary"" onclick="""">Search</button>
                </div>
                <small style=""color: black"">Through this input it supposed to nothing of these commands works within it</small>
            </div>
        </div>
    </div>

    <div class=""col col-6"">
            <div class=""card text-white mb-3"">
                <div class=""card-header bg-success"">File Download (Directory Traversal Vulnerability):</div>
                <div class=""card-body"">
                    <div class=""input-group"">
                        <input type=""text"" class=""form-control"" id=""DirectoryString"" />
                        <button type=""button"" class=""btn btn-primary"" onclick="""">Search</button>
                    </div>
                    <small style=""color: black"">Type the Filename you want to download from the server (e.g. web.config, ../../etc/passwd)</small>
                </div>
            </div>
    </div>
    
    <div class=""col col-6"">
            <div class=""card text-w");
            WriteLiteral(@"hite mb-3"">
                <div class=""card-header bg-success"">File Upload (Compiler Abuse Pattern Vulnerability):</div>
                <div class=""card-body"">
                    <div class=""input-group"">
                        <input type=""text"" class=""form-control"" id=""CShapeString"" />
                        <button type=""button"" class=""btn btn-primary"" onclick="""">Search</button>
                    </div>
                    <small style=""color: black"">Type the Filename you want to dynamically execute (e.g. wwwroot/lib.dll)</small>
                </div>
            </div>
    </div>
    
    <div class=""col col-6"">
            <div class=""card text-white mb-3"">
                <div class=""card-header bg-success"">insider Handler (Dynamic Compile Vulnerability):</div>
                <div class=""card-body"">
                    <div class=""input-group"">
                        <input type=""text"" class=""form-control"" id=""insiderString"" />
                        <button type=""button"" class=""btn btn-prima");
            WriteLiteral(@"ry"" onclick="""">Search</button>
                    </div>
                    <small style=""color: black"">
                        <div>RECIPE: Magic Value leading to command injection: tracefn=C4A938B6FE01E&cmd=pwd</div><br/>
                        <div>RECIPE: Path Traversal: x=../../etc/passwd</div><br/>
                        <div>RECIPE: Compiler Abuse Pattern: ?</div><br/>
                        <div>RECIPE: Execute a Fork Bomb and DDOS the host: ?</div><br/>
                        <div> RECIPE: Escape validation framework: x=</div><br/>
                    </small>
                </div>
            </div>
    </div>
    
    <div class=""col col-6"">
            <div class=""card text-white mb-3"">
                <div class=""card-header bg-success"">File Upload (Compiler Abuse Pattern Vulnerability):</div>
                <div class=""card-body"">
                    <div class=""input-group"">
                        <input type=""text"" class=""form-control"" id=""AddNewOrderString"" />
                      ");
            WriteLiteral(@"  <button type=""button"" class=""btn btn-primary"" onclick=""AddNewOrderGet()"">Get</button>
                        <button type=""button"" class=""btn btn-primary"" onclick=""AddNewOrderPost()"">Post</button>
                    </div>
                    <small style=""color: black"">{""Id"":0,""AspNetUserId"":1,""LastName"":""Xu"",""FirstName"":""Zhaoyan"",""FullName"":""Guo, JiaJia"",""AspNetUser"":null}</small>
                </div>
            </div>
    </div>
    
</div>
<div id=""unsecureContent"">
    <table class=""table table-dark"">
        <thead>
            <tr>
                <th>
                    Last Name
                </th>
                <th>
                    First Name
                </th>
            </tr>
        </thead>
        <tbody>
");
            EndContext();
#line 217 "/Users/tongbo/Downloads/CShape/tmp/ASP.NET-Demo/SqlInjection/Views/Home/Index.cshtml"
             foreach (var item in Model)
            {

#line default
#line hidden
            BeginContext(9033, 70, true);
            WriteLiteral("                <tr>\n                    <td>\n                        ");
            EndContext();
            BeginContext(9104, 43, false);
#line 221 "/Users/tongbo/Downloads/CShape/tmp/ASP.NET-Demo/SqlInjection/Views/Home/Index.cshtml"
                   Write(Html.DisplayFor(modelItem => item.LastName));

#line default
#line hidden
            EndContext();
            BeginContext(9147, 76, true);
            WriteLiteral("\n                    </td>\n                    <td>\n                        ");
            EndContext();
            BeginContext(9224, 44, false);
#line 224 "/Users/tongbo/Downloads/CShape/tmp/ASP.NET-Demo/SqlInjection/Views/Home/Index.cshtml"
                   Write(Html.DisplayFor(modelItem => item.FirstName));

#line default
#line hidden
            EndContext();
            BeginContext(9268, 49, true);
            WriteLiteral("\n                    </td>\n                </tr>\n");
            EndContext();
#line 227 "/Users/tongbo/Downloads/CShape/tmp/ASP.NET-Demo/SqlInjection/Views/Home/Index.cshtml"
            }

#line default
#line hidden
            BeginContext(9331, 97, true);
            WriteLiteral("        </tbody>\n    </table>\n</div>\n\n<div class=\"row\">\n    <div class=\"float-lg-right\">\n        ");
            EndContext();
            BeginContext(9428, 78, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1399510b60afd00553592d4ab10bddb3f409a4e614858", async() => {
                BeginContext(9485, 17, true);
                WriteLiteral("Recreate database");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9506, 19, true);
            WriteLiteral("\n    </div>\n\n</div>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<PaginatedList<SqlInjection.Models.Order>> Html { get; private set; }
    }
}
#pragma warning restore 1591
